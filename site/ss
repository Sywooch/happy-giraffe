<?php
/**
 * This is the model class for table "photo__albums".
 *
 * The followings are the available columns in table 'photo__albums':
 * @property string $id
 * @property string $title
 * @property string $description
 * @property string $created
 * @property string $updated
 */

namespace site\frontend\modules\photo\models;

use site\frontend\modules\photo\components\IPhotoCollection;

class PhotoAlbum extends \HActiveRecord implements IPhotoCollection
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'photo__albums';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('description', 'required'),
			array('title', 'length', 'max'=>255),
			array('created, updated', 'safe'),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, title, description, created, updated', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'title' => 'Title',
			'description' => 'Description',
			'created' => 'Created',
			'updated' => 'Updated',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return \CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new \CDbCriteria;

		$criteria->compare('id',$this->id,true);
		$criteria->compare('title',$this->title,true);
		$criteria->compare('description',$this->description,true);
		$criteria->compare('created',$this->created,true);
		$criteria->compare('updated',$this->updated,true);

		return new \CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return PhotoAlbum the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

    public function getCollectionLabel()
    {
        return 'Фотоальбом';
    }

    public function getCollectionTitle()
    {
        return $this->title;
    }

    public function getCollectionDescription()
    {
        return $this->description;
    }
}


INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 16208, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 113857, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 19982, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 113864, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 24976, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 181638, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 15574, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 220231, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 19372, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 181065, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 186076, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 183182, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 110167, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 183133, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 19358, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 44769, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 186651, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 20010, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 187161, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 19338, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 180361, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 187987, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 56300, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 187995, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 24949, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 183175, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 10275, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 187994, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 193953, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 55714, 'N;');
INSERT INTO auth__assignments (itemname, userid, `data`) VALUES ('advEditor', 193744, 'N;');

16208,113857,19982,113864,24976,181638,15574,220231,19372,181065,186076,183182,110167,183133,19358,44769,186651,20010,187161,19338,180361,187987,56300,187995,24949,183175,10275,187994,193953,55714,193744